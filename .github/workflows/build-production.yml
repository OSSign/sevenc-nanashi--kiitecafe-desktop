name: Build
on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version:
        description: バージョン
        required: true
      description:
        description: 説明
        required: false

jobs:
  build-vite:
    name: Build with vite
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.2.4
        with:
          version: 7

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: pnpm

      - name: Get cache
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.pnpm-store
            node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          pnpm i

      - name: Change version in package.json
        run: |
          if [ -n "${{ github.event.inputs.version }}" ]; then
            VERSION="${{ github.event.inputs.version }}" # "
          else
            RAW_VERSION="${{ github.ref_name }}" # "
            VERSION=${RAW_VERSION#v}
          fi
          node update-version.js $VERSION
          echo Version: $VERSION

      - name: Build with vite
        run: |
          pnpm build:vite

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: vite-compiled
          path: dist

  build-electron:
    strategy:
      matrix:
        os:
          - windows-latest
          - macos-latest
          - ubuntu-latest
        include:
          - os: windows-latest
            path: dist-electron/*.exe
          - os: macos-latest
            path: dist-electron/*.dmg
          - os: ubuntu-latest
            path: dist-electron/*.AppImage

    runs-on: ${{ matrix.os }}
    needs:
      - build-vite

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.2.4
        with:
          version: 7

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: pnpm

      - name: Get cache
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.pnpm-store
            node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          pnpm i

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: vite-compiled
          path: dist

      - name: Change version in package.json
        shell: bash
        run: |
          if [ -n "${{ github.event.inputs.version }}" ]; then
            VERSION="${{ github.event.inputs.version }}" # "
          else
            RAW_VERSION="${{ github.ref_name }}" # "
            VERSION=${RAW_VERSION#v}
          fi
          node update-version.js $VERSION
          echo Version: $VERSION

      - name: Build electron
        run: |
          pnpm build:electron

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-electron-built
          path: ${{ matrix.path }}

  release:
    name: Upload release
    runs-on: ubuntu-latest
    needs:
      - build-electron

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download windows binary
        uses: actions/download-artifact@v3
        with:
          name: windows-latest-electron-built
          path: dist

      - name: Download macos binary
        uses: actions/download-artifact@v3
        with:
          name: macos-latest-electron-built
          path: dist

      - name: Download linux binary
        uses: actions/download-artifact@v3
        with:
          name: ubuntu-latest-electron-built
          path: dist

      - name: Setup resources
        id: version
        run: |
          if [ -n "${{ github.event.inputs.version }}" ]; then
            VERSION="${{ github.event.inputs.version }}" # "
          else
            RAW_VERSION="${{ github.ref_name }}" # "
            VERSION=${RAW_VERSION#v}
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          if [[ $VERSION == *"-"* ]]; then
            PREVIEW=true
          else
            PREVIEW=false
          fi
          echo "preview=$PREVIEW" >> $GITHUB_OUTPUT
          echo "Version: $VERSION, is preview: $PREVIEW"

          cat > description.txt << EOS
          Windows環境ではSetup.$VERSION.exe、
          Mac環境では$VERSION.dmg、
          Linux環境では$VERSION.AppImageをダウンロードして下さい。

          ### Mac：「"Kiite Cafe Desktop"の開発元を検証できないため開けません」が出た場合
          Finder で、Control キーを押しながらダウンロードしたアプリをクリックし、メニューから「開く」をクリックしてください。
          または、「システム環境設定」→「セキュリティとプライバシー」→「一般」→「このまま開く」をクリックして下さい。

          > **Warning**
          > 開発者がMacの実機を持っていないため、記述が間違っている場合があります。

          ----

          EOS

          if [ -n "${{ github.event.inputs.version }}" ]; then
            LAST_VERSION=$(git tag -l --sort=-creatordate | sed "/v${VERSION//./\\.}/d" | sed -n "1p")
          else
            LAST_VERSION=$(git tag -l --sort=-creatordate | sed -n "2p")
          fi
          git log $LAST_VERSION...HEAD --pretty=format:"- %s" | head -n -1 >> description.txt

          if [ -n "${{ github.event.inputs.description }}" ]; then
            cat >> description.txt << EOS

            ----

            ${{ github.event.inputs.description }}
          EOS
          fi

      - name: Upload release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.version }}
          prerelease: ${{ steps.version.outputs.preview }}
          body_path: description.txt
          files: |
            dist/*
